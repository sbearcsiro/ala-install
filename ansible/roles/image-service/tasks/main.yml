- include: ../../common/tasks/setfacts.yml

- set_fact: war_filename="ROOT"
  when: images_context_path == "/"

- set_fact: war_filename="{{images_context_path}}"
  when: images_context_path != "/"

- name: create images database
  postgresql_db: name=images
  sudo_user: postgres
  sudo: True

# this fails on vagrant 
# to test, try psql -U images -W -d images -h localhost
- name: create database user images (this fails on vagrant)
  postgresql_user: db=images name=images password=password priv=ALL state=present
  sudo_user: postgres
  sudo: True

- name: ensure tomcat vhost webapps directory exists
  file: path="{{tomcat_dir}}/webapps-{{ images_hostname }}" state=directory owner={{tomcat_user}} group={{tomcat_user}}
  notify:
    - restart tomcat
  tags:
    - image-service
    - config

- name: download from maven repo
  get_url: url={{ images_url }} dest="{{ tomcat_dir }}/webapps-{{ images_hostname }}/{{war_filename}}.war"
  notify:
    - restart tomcat
  tags:
    - image-service
    - tomcat

- name: create tomcat vhost
  tomcat_vhost: name={{ images_hostname }}
  notify:
    - restart tomcat
  tags:
    - image-service
    - tomcat

- name: ensure target directories exist [data subdirectories etc.]
  file: path={{item}} state=directory owner={{tomcat_user}} group={{tomcat_user}}
  with_items:
    - "{{data_dir}}/images/config"

- name: ensure target directories exist [data subdirectories etc.]
  file: path={{item}} state=directory owner={{tomcat_user}}  group={{tomcat_user}}
  with_items:
    - "{{data_dir}}/images/config"  
    - "{{data_dir}}/images/store"
    - "{{data_dir}}/images/incoming"
    - "{{data_dir}}/images/bin/imgcnv"

- name: copy all config.properties
  template: src=config/config.properties dest={{data_dir}}/images/config/images-config.properties

- name: set data ownership
  file: path={{data_dir}}/{{images_app}} state=directory owner={{tomcat_user}} group={{tomcat_user}} recurse=true
  notify: 
    - restart tomcat

- name: set data ownership
  file: path={{data_dir}}/images owner={{tomcat_user}} group={{tomcat_user}} recurse=true
  notify:
    - restart tomcat
